services:
  flask:
    build:
      context: ..
      dockerfile: docker/dockerfile.api
    container_name: flask_app
    restart: always
    ports:
      - "5000:5000"
    env_file:
      - ../.env
    volumes:
      - ../src:/app/src
      - ../uploads:/app/uploads
      - ../processed:/app/processed
    depends_on:
      - redis
      - postgres

  celery:
    build:
      context: ..
      dockerfile: docker/dockerfile.celery
    container_name: celery_worker
    restart: always
    volumes:
      - ../src:/app/src
      - ../uploads:/app/uploads
      - ../processed:/app/processed
    env_file:
      - ../.env
    depends_on:
      - flask
      - redis

  redis:
    image: redis:alpine
    container_name: redis_server
    restart: always
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data

  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    restart: always
    ports:
      - "8000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - flask

  postgres:
    build:
      context: ..
      dockerfile: docker/dockerfile.db
    container_name: my_postgres
    restart: always
    env_file:
      - ../.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  newman:
    image: postman/newman:alpine
    container_name: newman_runner
    depends_on:
      - flask
    volumes:
      - ../collections:/etc/newman
      - ../reports:/etc/newman/report
    entrypoint: ["tail", "-f", "/dev/null"]

volumes:
  redis_data:
  postgres_data:
